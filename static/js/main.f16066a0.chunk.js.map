{"version":3,"sources":["components/common/navbar/index.js","components/common/confirm/index.js","hooks/useForm.js","constants/index.js","utils/api/category.js","components/common/modal/index.js","components/views/home/index.js","utils/upload/index.js","utils/api/posts.js","components/views/posts/createPost.js","components/views/posts/listPost.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","history","useHistory","useLocation","pathname","className","extra","key","type","block","onClick","push","onBack","window","back","title","Confirm","children","confirm","tittle","onConfirm","okText","cancelText","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","URL_CATEGORY","URL_POST","getCategories","a","axios","get","response","status","data","AddCategory","visible","onVisible","description","formValues","onCancel","footer","post","then","message","success","catch","error","placeholder","onChange","UpdateCategory","_id","length","put","Home","setVisible","visibleUpdate","setVisibleUpdate","setData","useEffect","resolvePromise","icon","PlusCircleOutlined","shape","itemLayout","dataSource","renderItem","item","Item","actions","delete","Meta","avatar","src","href","beforeUpload","file","isJpgOrPng","isLt2M","size","getPosts","Option","Select","CreatePost","author","img","category","setCategory","loading","setLoad","uploadButton","LoadingOutlined","PlusOutlined","listType","showUploadList","action","info","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","originFileObj","imageUrl","alt","style","width","e","defaultValue","map","id_category","addPost","ListPost","CloseCircleOutlined","App","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f16066a0.chunk.js","sourcesContent":["import React from 'react';\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {PageHeader, Button} from 'antd';\n\nexport default function Navbar() {\n  const history = useHistory()\n  const location = useLocation()\n  return location.pathname !== '/'\n  ? <PageHeader className=\"site-page-header\"\n    extra={[\n      <Button key=\"1\" type=\"link\" block onClick={() => history.push('/')}>Home</Button>,\n      <Button key=\"2\" type=\"link\" block onClick={() => history.push('/posts/')}>Posts</Button>\n    ]}\n    onBack={() => window.history.back()} title=\"App\" />\n\n  : <PageHeader className=\"site-page-header\"\n    extra={[\n      <Button key=\"1\" type=\"link\" block onClick={() => history.push('/')}>Home</Button>,\n      <Button key=\"2\" type=\"link\" block onClick={() => history.push('/posts/')}>Posts</Button>\n    ]}\n    title=\"App\" />\n}\n","import React from 'react';\nimport { Popconfirm } from 'antd';\n\nexport default function Confirm({children, confirm, tittle}) {\n  return (\n    <Popconfirm\n        title={tittle}\n        onConfirm={confirm}\n        okText=\"Aceptar\"\n        cancelText=\"Cancelar\"\n    >\n    {children}\n    </Popconfirm>\n  );\n};\n","import { useState } from 'react';\n\nexport const useForm = ( initialState = {} ) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n        setValues( initialState );\n  }\n\n  const handleInputChange = ({ target }) => {\n    setValues({...values, [ target.name ]: target.value});\n  }\n\n  return [ values, handleInputChange, reset ];\n};","export let URL_CATEGORY = 'https://frozen-fjord-18489.herokuapp.com/categories/';\nexport let URL_POST = 'https://frozen-fjord-18489.herokuapp.com/posts/';","import axios from 'axios';\nimport {message} from 'antd';\nimport {URL_CATEGORY} from './../../constants';\n\nexport function addCategory(data){\n    axios.post(URL_CATEGORY, data)\n    .then(response=>{\n        message.success(\"Categoría agregada!\");\n    })\n    .catch(error=>message.error(error));\n}\n\nexport function updateCategory(data, _id){\n    if(_id.length>0){\n        axios.put(URL_CATEGORY+_id, data)\n        .then(response=>{\n            message.success(\"Categoría editada!\");\n        })\n        .catch(error=>message.error(error));\n    }\n    else{\n        message.error(\"Error!\");\n    }\n}\n\nexport function deleteCategory(_id){\n    axios.delete(URL_CATEGORY+_id)\n    .then(response=>{\n        message.success(\"Categoría eliminada!\");\n    })\n    .catch(error=>message.error(error));\n}\n\nexport async function getCategories(){\n    let response = await axios.get(URL_CATEGORY)\n    return response.status === 200 ? response.data : []\n}\n\nexport async function getCategory(_id){\n    let response = await axios.get(URL_CATEGORY+_id)\n    return response.data[0]\n}\n","import React from 'react';\nimport { Button, Modal, Input } from 'antd';\nimport { useForm } from './../../../hooks/useForm';\nimport {addCategory, updateCategory} from './../../../utils/api/category';\n\nexport const AddCategory = ({visible, onVisible}) => {\n  const [ formValues, handleInputChange ] = useForm({ name: '', description: ''});\n  const { name, description } = formValues;\n\n  return(\n    <Modal\n        title=\"Agregar categoría\"\n        visible={visible}\n        onCancel={onVisible}\n        footer={[\n            <Button key=\"back\" onClick={onVisible}>Cancelar</Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={()=>{addCategory(formValues); onVisible()}}>Agregar</Button>\n        ]}\n    >\n        <Input type=\"text\" name=\"name\" value={name} placeholder=\"Nombre\" onChange={handleInputChange}/>\n        <Input type=\"text\" name=\"description\" value={description} placeholder=\"Descripción\" onChange={handleInputChange}/>\n    </Modal>\n  );\n}\n\nexport const UpdateCategory = ({visible, onVisible, values}) => {\n  const [ formValues, handleInputChange ] = useForm({name: '', description: ''});\n  const { name, description } = formValues;\n  return(\n    <Modal\n        title=\"Editar categoría\"\n        visible={visible}\n        onCancel={onVisible}\n        footer={[\n            <Button key=\"back\" onClick={onVisible}>Cancelar</Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={()=>{updateCategory(formValues, values._id); onVisible()}}>Agregar</Button>\n        ]}\n    >\n        <Input type=\"text\" name=\"name\" value={name} placeholder={values.name} onChange={handleInputChange}/>\n        <Input type=\"text\" name=\"description\" value={description} placeholder={values.description} onChange={handleInputChange}/>\n    </Modal>\n  );\n}\n\n\n","import React, {useState, useEffect} from 'react';\nimport { List, Avatar, Button, Skeleton } from 'antd';\nimport {PlusCircleOutlined} from '@ant-design/icons';\nimport Confirm from './../../common/confirm';\nimport {AddCategory, UpdateCategory} from './../../common/modal';\nimport {getCategories, deleteCategory} from './../../../utils/api/category';\n\nconst Home = () => {\n  const [visible, setVisible] = useState(false);\n  const [visibleUpdate, setVisibleUpdate] = useState({visible: false, values: {}});\n  const [data, setData] = useState([]);\n\n  useEffect(()=>{\n    async function resolvePromise() {\n      let response = await getCategories();\n      setData(response)\n    };\n    resolvePromise();\n  }, [data]);\n\n  return (\n    <div className=\"home\">\n      <Button type=\"primary\" onClick={()=>setVisible(!visible)} icon={<PlusCircleOutlined />} shape=\"round\">Agregar</Button>\n      {data.length > 0 ?\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={data}\n        renderItem={item => (\n        <List.Item actions={[<Button type=\"link\" onClick={()=>setVisibleUpdate({visible: !visibleUpdate.visible, values: item})} key=\"list-loadmore-edit\">editar</Button>, \n        <Confirm tittle=\"¿Deseas eliminar esta categoría?\" confirm={()=>deleteCategory(item._id)}>\n          <Button type=\"link\" key=\"list-loadmore-delete\">eliminar</Button>\n        </Confirm>]}>\n          <List.Item.Meta\n            avatar={<Avatar src=\"https://img5.goodfon.com/wallpaper/nbig/4/42/colorful-lines-figures-fon-linii-figury-krasochnyi-fon.jpg\" />}\n            title={<a href=\"https://ant.design\">{item.name}</a>}\n            description={item.description}\n          />\n        </List.Item>\n        )}\n      />\n      : <Skeleton/>}\n      <AddCategory visible={visible} onVisible={()=>setVisible(!visible)}/>\n      <UpdateCategory visible={visibleUpdate.visible} values={visibleUpdate.values} onVisible={()=>setVisibleUpdate({...visibleUpdate, visible: !visibleUpdate.visible})}/>\n    </div>\n  );\n};\n\nexport default Home;","import {message} from 'antd';\n\nexport function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n};\n\nexport function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('La imagen no corresponde al formato JPG/PNG!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Sube una imagen menor a 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n};","import axios from 'axios';\nimport {message} from 'antd';\nimport {URL_POST} from './../../constants';\n\nexport function addPost(data, id_category){\n    if(id_category.length > 0){\n        axios.post(URL_POST + id_category, data)\n        .then(response=>{\n            message.success(\"Publicación agregada!\");\n        })\n        .catch(error=>message.error(error));\n    }\n    else {\n        message.error(\"Agrega una categoría\");\n    }\n}\n\nexport function deletePost(_id){\n    axios.delete(URL_POST+_id)\n    .then(()=>{\n        message.success(\"Publicación eliminada!\");\n    })\n    .catch(error=>message.error(error));\n}\n\nexport async function getPosts(){\n    let response = await axios.get(URL_POST)\n    return response.status === 200 ? response.data : []\n}\n\nexport async function getPost(_id){\n    let response = await axios.get(URL_POST+_id)\n    return response.data[0]\n}","import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Button, Input, Upload, Select } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport {getBase64, beforeUpload} from './../../../utils/upload';\nimport {addPost} from './../../../utils/api/posts';\nimport {getCategories} from './../../../utils/api/category';\n\nconst { Option } = Select;\n\nconst CreatePost = () => {\n  const [values, setValues] = useState({tittle: '', description: '', author: '', img: ''});\n  const [category, setCategory] = useState('');\n  const [loading, setLoad] = useState(false);\n  const [data, setData] = useState([]);\n  const history = useHistory();\n\n  useEffect(()=>{\n    async function resolvePromise() {\n      let response = await getCategories();\n      setData(response)\n    };\n    resolvePromise();\n  }, [data]);\n\n  const handleChange = info => {\n    if (info.file.status === 'uploading') {\n      setLoad(true)\n      return;\n    };\n    if (info.file.status === 'done') {\n      getBase64(info.file.originFileObj, imageUrl =>{\n        setValues({...values, img: imageUrl});\n        setLoad(false);\n      });\n    };\n  };\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className=\"ant-upload-text\">Imagen</div>\n    </div>\n  );\n\n  return (\n    <div className=\"form-post\">\n      <Upload\n        name=\"avatar\"\n        listType=\"picture-card\"\n        className=\"avatar-uploader\"\n        showUploadList={false}\n        action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        beforeUpload={beforeUpload}\n        onChange={handleChange}\n      >\n        {values.img ? <img src={values.img} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton }\n      </Upload>\n\n      <Input placeholder=\"Título\" onChange={(e)=>setValues({...values, tittle: e.target.value})} value={values.tittle} />\n      <Input placeholder=\"Descripción\" onChange={(e)=>setValues({...values, description: e.target.value})} value={values.description} />\n      <Input placeholder=\"Autor\" onChange={(e)=>setValues({...values, author: e.target.value})} value={values.author} />\n\n      <Select defaultValue=\"Categoría\" style={{ width: '40vw' }} onChange={value=>setCategory(value)}>\n        {data.length > 0 ?\n          data.map(category=>(\n            <Option value={category._id} key={category._id}>{category.name}</Option>\n          ))\n        : null}\n      </Select>\n\n      <Button type=\"primary\" onClick={()=>{addPost(values, category); history.push('/posts/');}}>Aceptar</Button>\n    </div>\n  );\n};\n\nexport default CreatePost;","import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { List, Avatar, Button, Skeleton } from 'antd';\nimport {PlusCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport Confirm from './../../common/confirm';\nimport {getPosts, deletePost} from './../../../utils/api/posts';\n\nconst ListPost = () => {\n  const history = useHistory();\n  const [data, setData] = useState([]);\n\n  useEffect(()=>{\n    async function resolvePromise() {\n      let response = await getPosts();\n      setData(response)\n    };\n    resolvePromise();\n  }, [data]);\n\n  return (\n    <div className=\"home\">\n      <Button type=\"primary\" icon={<PlusCircleOutlined />} shape=\"round\" onClick={()=>history.push('/new-post/')}>Agregar</Button>\n      {data.length > 0 ?\n      <List\n      itemLayout=\"vertical\"\n      size=\"large\"\n      dataSource={data}\n      renderItem={item => (\n        <List.Item\n          key={item._id}\n          actions={[\n            <Confirm tittle=\"¿Deseas eliminar esta Publicación?\" confirm={()=>deletePost(item._id)}>\n              <Button type=\"danger\" icon={<CloseCircleOutlined />} shape=\"round\" key=\"list-vertical-star-o\">Borrar</Button>\n            </Confirm>\n          ]}\n          extra={\n            <img\n              width={272}\n              alt=\"logo\"\n              src={item.img}\n            />\n          }\n        >\n          <List.Item.Meta\n            avatar={<Avatar src=\"https://img5.goodfon.com/wallpaper/nbig/4/42/colorful-lines-figures-fon-linii-figury-krasochnyi-fon.jpg\" />}\n            title={<a href=\"https://ant.design\">{item.tittle}</a>}\n            description={'Autor: '+item.author}\n          />\n          {item.description}\n        </List.Item>\n      )}\n    />\n      : <Skeleton/>}\n    </div>\n  );\n};\n\nexport default ListPost;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Navbar from './components/common/navbar';\nimport Home from './components/views/home';\nimport CreatePost from './components/views/posts/createPost';\nimport ListPost from './components/views/posts/listPost';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/posts/\" component={ListPost} />\n        <Route path=\"/new-post/\" component={CreatePost} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.scss';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}